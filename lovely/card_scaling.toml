[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# yes this really sucked to implement

# Hook into anything with generic x_mult gain
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.x_mult = self.ability.x_mult + self.ability.extra
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.x_mult = self.ability.x_mult + self.ability.extra * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true


# Hook into anything with generic mult gain
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.mult = self.ability.mult + self.ability.extra
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.mult = self.ability.mult + self.ability.extra * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true


# Hook into Hologram
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if self.ability.name == 'Hologram' and (not context.blueprint)
    and context.cards and context.cards[1] then
        self.ability.x_mult = self.ability.x_mult + #context.cards*self.ability.extra
'''
position = "after"
payload = '''
        if next(SMODS.find_card('j_mxms_soil')) then
            self.ability.x_mult = self.ability.x_mult + #context.cards*self.ability.extra * (G.GAME.mxms_soil_mod - 1)
        end
        SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Ceremonial Dagger
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.mult = self.ability.mult + sliced_card.sell_cost*2
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.mult = self.ability.mult + sliced_card.sell_cost*2 * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Canio
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.caino_xmult = self.ability.caino_xmult + faces*self.ability.extra
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.caino_xmult = self.ability.caino_xmult + faces*self.ability.extra * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.caino_xmult = self.ability.caino_xmult + face_cards*self.ability.extra
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.caino_xmult = self.ability.caino_xmult + face_cards*self.ability.extra * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Glass Joker
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.x_mult = self.ability.x_mult + self.ability.extra*glasses
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.x_mult = self.ability.x_mult + self.ability.extra*glasses * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.x_mult = self.ability.x_mult + self.ability.extra*glass_cards
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.x_mult = self.ability.x_mult + self.ability.extra*glass_cards * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.x_mult = self.ability.x_mult + self.ability.extra*shattered_glass
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.x_mult = self.ability.x_mult + self.ability.extra*shattered_glass * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Yorick
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if self.ability.name == 'Yorick' and not context.blueprint then
    if self.ability.yorick_discards <= 1 then
        self.ability.yorick_discards = self.ability.extra.discards
        self.ability.x_mult = self.ability.x_mult + self.ability.extra.xmult
'''
position = "after"
payload = '''
        if next(SMODS.find_card('j_mxms_soil')) then
            self.ability.x_mult = self.ability.x_mult + self.ability.extra.xmult * (G.GAME.mxms_soil_mod - 1)
        end
        SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into some generic chip gain
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.extra.chips = self.ability.extra.chips + self.ability.extra.chip_mod
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.extra.chips = self.ability.extra.chips + self.ability.extra.chip_mod * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true


# Hook into Rocket
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.extra.dollars = self.ability.extra.dollars + self.ability.extra.increase
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.extra.dollars = self.ability.extra.dollars + self.ability.extra.increase * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Egg and Gift Card
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.extra_value = self.ability.extra_value + self.ability.extra
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.extra_value = self.ability.extra_value + self.ability.extra * (G.GAME.mxms_soil_mod - 1)
end
'''
match_indent = true
times = 1


# Hook into Gift Card
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
return {
    message = localize('k_val_up'),
    colour = G.C.MONEY
}
'''
position = "before"
payload = '''
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true


# Hook into Vampire
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.x_mult = self.ability.x_mult + self.ability.extra*#enhanced
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.x_mult = self.ability.x_mult + self.ability.extra*#enhanced * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1


# Hook into Green Joker
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
self.ability.mult = self.ability.mult + self.ability.extra.hand_add
'''
position = "after"
payload = '''
if next(SMODS.find_card('j_mxms_soil')) then
    self.ability.mult = self.ability.mult + self.ability.extra.hand_add * (G.GAME.mxms_soil_mod - 1)
end
SMODS.calculate_context({mxms_scaling_card = true})
'''
match_indent = true
times = 1
