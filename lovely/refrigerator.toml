[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

    # Add hook to Gros Michel/Cavendish
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Gros Michel' then loc_vars = {self.ability.extra.mult, ''..(G.GAME and G.GAME.probabilities.normal or 1), self.ability.extra.odds}"
position = "at"
payload = "elseif self.ability.name == 'Gros Michel' then loc_vars = {self.ability.extra.mult, ''..(G.GAME and G.GAME.probabilities.normal or 1), self.ability.extra.odds * G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Cavendish' then loc_vars = {self.ability.extra.Xmult, ''..(G.GAME and G.GAME.probabilities.normal or 1), self.ability.extra.odds}"
position = "at"
payload = "elseif self.ability.name == 'Cavendish' then loc_vars = {self.ability.extra.Xmult, ''..(G.GAME and G.GAME.probabilities.normal or 1), self.ability.extra.odds * G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1


    # Add hook to Ice Cream
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Ice Cream' then loc_vars = {self.ability.extra.chips, self.ability.extra.chip_mod}"
position = "at"
payload = "elseif self.ability.name == 'Ice Cream' then loc_vars = {self.ability.extra.chips, self.ability.extra.chip_mod / G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.extra.chips - self.ability.extra.chip_mod <= 0 then "
position = "at"
payload = "if self.ability.extra.chips - (self.ability.extra.chip_mod / G.GAME.mxms_fridge_mod) <= 0 then"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.ability.extra.chips = self.ability.extra.chips - self.ability.extra.chip_mod"
position = "at"
payload = "self.ability.extra.chips = self.ability.extra.chips - (self.ability.extra.chip_mod / G.GAME.mxms_fridge_mod)"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = localize{type='variable',key='a_chips_minus',vars={self.ability.extra.chip_mod}},"
position = "at"
payload = "message = localize{type='variable',key='a_chips_minus',vars={self.ability.extra.chip_mod / G.GAME.mxms_fridge_mod}},"
match_indent = true
times = 1




    # Add hook to Turtle Bean
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Turtle Bean' then loc_vars = {self.ability.extra.h_size, self.ability.extra.h_mod}"
position = "at"
payload = "elseif self.ability.name == 'Turtle Bean' then loc_vars = {self.ability.extra.h_size, self.ability.extra.h_mod / G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.extra.h_size - self.ability.extra.h_mod <= 0 then"
position = "at"
payload = "if self.ability.extra.h_size - (self.ability.extra.h_mod / G.GAME.mxms_fridge_mod) <= 0 then"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "G.hand:change_size(- self.ability.extra.h_mod)"
position = "at"
payload = "G.hand:change_size(- (self.ability.extra.h_mod / G.GAME.mxms_fridge_mod))"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = localize{type='variable',key='a_handsize_minus',vars={self.ability.extra.h_mod}},"
position = "at"
payload = "message = localize{type='variable',key='a_handsize_minus',vars={self.ability.extra.h_mod / G.GAME.mxms_fridge_mod}},"
match_indent = true
times = 1


    # Add hook to Popcorn
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Popcorn' then loc_vars = {self.ability.mult, self.ability.extra}"
position = "at"
payload = "elseif self.ability.name == 'Popcorn' then loc_vars = {self.ability.mult, self.ability.extra / G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.mult - self.ability.extra <= 0 then"
position = "at"
payload = "if self.ability.mult - (self.ability.extra / G.GAME.mxms_fridge_mod) <= 0 then "
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.ability.mult = self.ability.mult - self.ability.extra"
position = "at"
payload = "self.ability.mult = self.ability.mult - (self.ability.extra / G.GAME.mxms_fridge_mod)"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = localize{type='variable',key='a_mult_minus',vars={self.ability.extra}},"
position = "at"
payload = "message = localize{type='variable',key='a_mult_minus',vars={self.ability.extra / G.GAME.mxms_fridge_mod}},"
match_indent = true
times = 1


    # Add hook to Ramen
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Ramen' then loc_vars = {self.ability.x_mult, self.ability.extra}"
position = "at"
payload = "elseif self.ability.name == 'Ramen' then loc_vars = {self.ability.x_mult, self.ability.extra / G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.x_mult - self.ability.extra <= 1 then"
position = "at"
payload = "if self.ability.x_mult - (self.ability.extra / G.GAME.mxms_fridge_mod) <= 1 then"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.ability.x_mult = self.ability.x_mult - self.ability.extra"
position = "at"
payload = "self.ability.x_mult = self.ability.x_mult - (self.ability.extra / G.GAME.mxms_fridge_mod)"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = localize{type='variable',key='a_xmult_minus',vars={self.ability.extra}},"
position = "at"
payload = "message = localize{type='variable',key='a_xmult_minus',vars={self.ability.extra / G.GAME.mxms_fridge_mod}},"
match_indent = true
times = 1


    # Add hook to Seltzer
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "elseif self.ability.name == 'Seltzer' then loc_vars = {self.ability.extra}"
position = "at"
payload = "elseif self.ability.name == 'Seltzer' then loc_vars = {self.ability.extra * G.GAME.mxms_fridge_mod}"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.ability.extra - 1 <= 0 then "
position = "at"
payload = "if self.ability.extra - (1 / G.GAME.mxms_fridge_mod) <= 0 then "
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "self.ability.extra = self.ability.extra - 1"
position = "at"
payload = "self.ability.extra = self.ability.extra - (1 / G.GAME.mxms_fridge_mod)"
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "message = self.ability.extra..'',"
position = "at"
payload = "message = self.ability.extra * G.GAME.mxms_fridge_mod..'',"
match_indent = true
times = 1